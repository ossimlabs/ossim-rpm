def notifyObj
node {
   env.WORKSPACE=pwd()
   try{
     stage("Checkout"){
         dir("ossim-rpm"){
            git branch: "${OSSIM_GIT_BRANCH}", url: "${GIT_PUBLIC_SERVER_URL}/ossim-rpm.git"
         }
     }
     echo "${env.WORKSPACE}"
     stage("Download Artifacts"){
     
       // Is this really needed? Doesn't seem used but was being checked out.
       step ([$class: "CopyArtifact",
             projectName: "ossim-ci-${OSSIM_GIT_BRANCH}",
             filter: "ossim-ci-${OSSIM_GIT_BRANCH}.tgz",
             flatten: true])
       sh "tar xvfz ossim-ci-${OSSIM_GIT_BRANCH}.tgz"
       notifyObj = load "${env.WORKSPACE}/ossim-ci/jenkins/pipeline/notify.groovy"
       
       step ([$class: 'CopyArtifact',
          projectName: "ossim-${OSSIM_GIT_BRANCH}",
          filter: "artifacts/ossim-install.tgz",
          flatten: true,
          target: "${env.WORKSPACE}/ossim-install"])
       //step ([$class: 'CopyArtifact',
       //   projectName: "oldmar-${OSSIM_GIT_BRANCH}",
       //   filter: "artifacts/install.tgz",
       //   flatten: true,
       //   target: "${env.WORKSPACE}/oldmar-install"])
       step ([$class: 'CopyArtifact',
          projectName: "ossim-csm-plugin-${OSSIM_GIT_BRANCH}",
          filter: "ossim-csm-plugin-install.tgz",
          flatten: true,
          target: "${env.WORKSPACE}/ossim-csm-plugin-install"])
       step ([$class: 'CopyArtifact',
          projectName: 'ossim-rpm-dependencies',
          filter: "dependency-rpms.tgz",
          flatten: true,
          target: "${env.WORKSPACE}"])
     }
     stage("Build"){
      dir("${env.WORKSPACE}"){
        sh "tar xvfz dependency-rpms.tgz"
        sh "ossim-rpm/scripts/rpmbuild-binary.sh"
      }
     }
     
     stage("Archive"){
       dir("${env.WORKSPACE}/artifacts"){
           sh "mv ${env.WORKSPACE}/rpms.tgz ."
       }
       archiveArtifacts 'artifacts/*'
    }
  }
  catch(e)
  {
    currentBuild.result = "FAILED"
  }
  stage("Clean Workspace"){
    //step([$class: 'WsCleanup'])
  }
}
